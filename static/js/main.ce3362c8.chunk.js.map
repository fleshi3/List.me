{"version":3,"sources":["TodoList.js","TodoItems.js","Header.js","Footer.js","DeleteButton.js","App.js","serviceWorker.js","index.js"],"names":["TodoList","this","props","inputElement","current","focus","react_default","a","createElement","className","onSubmit","addItem","placeholder","ref","value","currentItem","text","onChange","handleInput","type","index_es","icon","faPlus","size","onClick","deleteMarked","faTrash","Component","check","viewBox","d","style","stroke","fill","TodoItems","createTasks","item","index","react_flip_move_es","key","maintainContainerHeight","background","completed","order","color","fontWeight","faDotCircle","_this","markComplete","listItems","entries","map","staggerDelayBy","MainHeader","MainFooter","takeTour","faAngleDoubleRight","DeleteButton","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","target","Date","now","setState","preventDefault","newItem","state","console","log","items","concat","toConsumableArray","deleteItem","filteredItems","filter","React","createRef","run","steps","disableBeacon","content","display","border","borderRadius","width","class","showOverlay","bind","assertThisInitialized","_this$state","react_joyride_es","continuous","styles","options","zIndex","arrowColor","backgroundColor","overlayColor","primaryColor","textColor","src_DeleteButton","Header","src_TodoList","src_TodoItems","Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce3362c8.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nclass TodoList extends Component {\n  componentDidUpdate() {\n    this.props.inputElement.current.focus();\n  }\n  render() {\n    return (\n      <div className=\"todoListMain\">\n        <div className=\"header\">\n          <form onSubmit={this.props.addItem} className=\"TodoList\">\n            <input\n              placeholder=\"add list item...\"\n              ref={this.props.inputElement}\n              value={this.props.currentItem.text}\n              onChange={this.props.handleInput}\n            />\n            <button type=\"submit\">\n              <FontAwesomeIcon icon={faPlus} size=\"sm\" className=\"faPlus\" />\n            </button>\n          </form>\n        </div>\n        <div className=\"deleteButton\">\n          <button\n            type=\"submit\"\n            className=\"DeleteButton\"\n            onClick={this.props.deleteMarked}>\n            <FontAwesomeIcon\n              icon={faTrash}\n              size=\"sm\"\n              className=\"faWindowClose\"\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React, {Component} from 'react';\nimport './main.scss';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faDotCircle} from '@fortawesome/free-solid-svg-icons';\nimport FlipMove from 'react-flip-move';\n\nconst check = (\n  <svg className=\"svg svg-icon\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M7.629,14.566c0.125,0.125,0.291,0.188,0.456,0.188c0.164,0,0.329-0.062,0.456-0.188l8.219-8.221c0.252-0.252,0.252-0.659,0-0.911c-0.252-0.252-0.659-0.252-0.911,0l-7.764,7.763L4.152,9.267c-0.252-0.251-0.66-0.251-0.911,0c-0.252,0.252-0.252,0.66,0,0.911L7.629,14.566z\"\n      style={{stroke: 'white', fill: 'white'}}\n    />\n  </svg>\n);\n// Stagger Delay nibba\n\nclass TodoItems extends Component {\n  createTasks = (item, index) => {\n    return (\n      <FlipMove key={item.key} maintainContainerHeight=\"true\">\n        <div\n          className=\"liContainer\"\n          key={item.key}\n          style={{\n            background: item.completed ? '#121212' : '',\n            order: item.completed ? '99' : '',\n          }}>\n          <li\n            style={{\n              color: item.completed ? '#689d6a' : '',\n              fontWeight: item.completed ? '600' : '',\n              order: item.completed ? '99' : '',\n            }}>\n            <FontAwesomeIcon\n              icon={faDotCircle}\n              size=\"xs\"\n              className=\"faDotCircle\"\n              style={{color: item.completed ? '#353535' : ''}}\n            />\n            <div className=\"itemText\">{item.text}</div>\n            <div className=\"pretty p-svg p-curve p-thick p-tada\">\n              <input\n                type=\"checkbox\"\n                key={item.key}\n                onClick={() => this.props.markComplete(item.key)}\n              />\n              <div className=\"state p-warning-o\">\n                {check}\n                <label />\n              </div>\n            </div>\n          </li>\n        </div>\n      </FlipMove>\n    );\n  };\n\n  render() {\n    const todoEntries = this.props.entries;\n    //items are formatted before createTasks are fed\n    const listItems = todoEntries.map(this.createTasks);\n    return (\n      <div>\n        <ul className=\"theList\">\n          <FlipMove\n            staggerDelayBy={200}\n            className=\"flexFix\"\n            maintainContainerHeight=\"true\">\n            {listItems}\n          </FlipMove>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TodoItems;\n","import React, {Component} from 'react';\n\nclass MainHeader extends Component {\n  render() {\n    return (\n      <div className=\"mainHeader\">\n        <h1>\n                <span className='textMain'>list</span>\n          <span className=\"textAlt\">me</span>\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default MainHeader;\n","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faAngleDoubleRight} from '@fortawesome/free-solid-svg-icons';\n\n\nclass MainFooter extends Component {\n  render() {\n    return (\n      <div className=\"mainFooter\">\n              <p>\n                Click this button for a quick tour! \n              </p>\n              <button type=\"submit\" onClick={this.props.takeTour}>\n                      START{' '} <FontAwesomeIcon icon={faAngleDoubleRight} className=\"tourButton\" />\n              </button>\n      </div>\n    );\n  }\n}\n\nexport default MainFooter;\n","import React, {Component} from 'react';\nimport './main.scss';\n\nclass DeleteButton extends Component {\n  render() {\n    return (\n      <div className=\"navBar\">\n        <div className=\"navLinks\">add | filter | about | github</div>\n      </div>\n    );\n  }\n}\n\nexport default DeleteButton;\n","import React, {Component} from 'react';\n//import './App.css';\nimport './main.scss';\nimport TodoList from './TodoList';\nimport TodoItems from './TodoItems';\nimport MainHeader from './Header.js';\nimport MainFooter from './Footer.js';\nimport DeleteButton from './DeleteButton';\nimport FlipMove from 'react-flip-move';\nimport Floater from 'react-floater';\nimport ReactJoyride, {STATUS} from 'react-joyride';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nconst defaultOptions = {\n  arrowColor: '#fff',\n  backgroundColor: '#fff',\n  beaconSize: 36,\n  overlayColor: 'rgba(0, 0, 0, 0.5)',\n  primaryColor: '#f04',\n  spotlightShadow: '0 0 15px rgba(0, 0, 0, 0.5)',\n  textColor: '#333',\n  width: undefined,\n  zIndex: 100,\n};\n\nconst Overlay = {\n  backgroundColor: 'black',\n  opacity: '0.8',\n  position: 'fixed',\n  bottom: '4rem',\n  left: '0',\n  right: '0',\n  top: '0',\n  zIndex: '100',\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [\n        {\n          text: 'Introduce new visitors to my app;',\n          key: 'stock1',\n          completed: false,\n        },\n              {\n                      text: 'Learn React JS',\n                      key: 'stock2',\n                      completed: false,\n              },\n              {\n                      text: 'Added interactive tour',\n                      key: 'stock3',\n                      completed: false,\n              }\n      ],\n      currentItem: {text: '', key: '', completed: ''},\n      run: false,\n      steps: [\n        {\n          target: '.todoListMain',\n          disableBeacon: true,\n          content: (\n            <div>\n              This is the{' '}\n              <span className=\"textAlt\">\n                <b>list bar.</b>\n              </span>\n              This is where list items can be added and deleted.\n            </div>\n          ),\n        },\n        {\n          target: 'form',\n          content: (\n            <div>\n              List items can be submitted by pressing the\n              <div\n                style={{\n                  display: 'inline-block',\n                  background: '#8ec07c',\n                  color: '#689d6a',\n                  border: '#689d6a 2px solid',\n                  borderRadius: '5px',\n                  width: '80px',\n                }}>\n                <FontAwesomeIcon icon={faPlus} />\n              </div>{' '}\n              button.\n            </div>\n          ),\n        },\n        {\n          target: '.pretty',\n          content:\n            'In order to delete entries; the respective checkbox must be clicked.',\n        },\n        {\n          target: '.DeleteButton',\n          content: (\n            <div>\n              Finally, all marked entries can be simultaneously removed by\n              clicking the\n              <div\n                style={{\n                  display: 'inline-block',\n                  background: '#8ec07c',\n                  color: '#689d6a',\n                  border: '#689d6a 2px solid',\n                  borderRadius: '5px',\n                  width: '60px',\n                }}>\n                <FontAwesomeIcon icon={faTrash} />\n              </div>{' '}\n              icon.\n            </div>\n          ),\n        },\n        {\n          target: '.itemContainer',\n          content: (\n            <div>\n              <p class=\"textAlt\">\n                <b>Thanks for checking out this App!</b>\n              </p>\n              <br />\n              <span className=\"textAlt\"><b>Note: </b></span> This current build is only responsive for a maximum of 6\n              entries.\n            </div>\n          ),\n        },\n      ],\n      showOverlay: false,\n    };\n    this.markComplete = this.markComplete.bind(this);\n  }\n\n  handleInput = e => {\n    const itemText = e.target.value;\n    const currentItem = {text: itemText, key: Date.now(), completed: false};\n    this.setState({\n      currentItem,\n    });\n  };\n\n  addItem = e => {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if (newItem.text !== '') {\n      console.log(newItem);\n      const items = [...this.state.items, newItem];\n      this.setState({\n        items: items,\n        currentItem: {text: '', key: '', completed: ''},\n      });\n    }\n  };\n\n  deleteItem = key => {\n    const filteredItems = this.state.items.filter(item => {\n      return item.key !== key;\n    });\n    this.setState({\n      items: filteredItems,\n    });\n  };\n\n  inputElement = React.createRef();\n\n  markComplete = key => {\n    const markedItems = this.state.items.map(items => {\n      if (items.key === key) {\n        items.completed = !items.completed;\n      }\n      return items;\n    });\n    const items = [...this.state.items];\n    this.setState({items});\n  };\n\n  deleteMarked = items => {\n    const filteredItems = this.state.items.filter(item => {\n      return item.completed !== true;\n    });\n    this.setState({\n      items: filteredItems,\n    });\n  };\n\n  takeTour = e => {\n    e.preventDefault();\n    this.setState({\n      run: true,\n    });\n  };\n\n  render() {\n    const {run, steps} = this.state;\n    return (\n      <div className=\"App\">\n        <ReactJoyride\n          steps={steps}\n          continuous\n          run={run}\n          styles={{\n            options: {\n              zIndex: 10000,\n              arrowColor: '#e3ffeb',\n              backgroundColor: '#e3ffeb',\n              overlayColor: 'rgba(79, 26, 0, 0.4)',\n              primaryColor: '#8ec07c',\n              textColor: '#004a14',\n            },\n          }}\n        />\n        <div className=\"AppContainer\">\n          <DeleteButton deleteMarked={this.deleteMarked} />\n          <MainHeader />\n          <TodoList\n            addItem={this.addItem}\n            inputElement={this.inputElement}\n            handleInput={this.handleInput}\n            currentItem={this.state.currentItem}\n            deleteMarked={this.deleteMarked}\n          />\n          <FlipMove\n            className=\"itemContainer\"\n            key={this.state.items.key}\n            maintainContainerHeight=\"true\"\n            style={{order: this.state.items.completed ? '99' : ''}}>\n            <TodoItems\n              entries={this.state.items}\n              deleteItem={this.deleteItem}\n              markComplete={this.markComplete}\n            />\n            <div className=\"listFooter\">copyright 2019</div>\n          </FlipMove>\n        </div>\n        <MainFooter takeTour={this.takeTour} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}